---
const {pageYear, pageDay} = Astro.props

import { Code } from 'astro:components';

import ProblemGrid from './ProblemGrid.astro';


const solutionStatusUrl = "https://raw.githubusercontent.com/jimbarrett27/AdventOfCode/refs/heads/main/solution_status.txt";
const response = await fetch(solutionStatusUrl).then(res => res.text());
const lines = response.split('\n');

let solutionStatuses: Map<number, 'neither' | 'half' | 'both'> = new Map();  
let availableYears: Set<number> = new Set();
for (const line of lines) {
    const [year, day, part1, part2] = line.split(' ');
    if (parseInt(year) === pageYear) {
        if (part2 === "*") {
            solutionStatuses.set(parseInt(day), "both");
        } else if (part1 === "*") {
            solutionStatuses.set(parseInt(day), "half");
        } else {
            solutionStatuses.set(parseInt(day), "neither");
        }
    }

    availableYears.add(parseInt(year));
    
}

const minYear = Math.min(...availableYears);
const maxYear = Math.max(...availableYears);

const years = [];
for (let i = minYear; i <= maxYear; i++) {
    years.push(i);
}

let code = "";
if (pageDay !== -1) {
    const code_location = `https://raw.githubusercontent.com/jimbarrett27/AdventOfCode/refs/heads/main/${pageYear}/ex_${pageDay}.py`;
    code = await fetch(code_location)
    .then(function(response) {
        return response.text();
    });
}

---

<h2>Advent of Code Solutions</h2>
I have set myself a personal challenge to try and get up to date with <a href="https://adventofcode.com/">advent of code</a>,
a set of programming challenges released each December. 
<p></p>
Each day has 2 related problems, for a total of 50 problems per year. 
Each button below will show my code solving that problem. Green buttons where I have solved both problems of the
day, orange where I have only solved the first one and red where I haven't solved either.
<p></p>
<div class="flex justify-center gap-2 mb-6">
    {years.map(y => (
        <a 
        href={`/advent_of_code/${y}`} 
        class={`px-3 py-1 text-sm font-medium rounded-md ${y === pageYear 
            ? "font-bold border-b-2 border-blue-500" 
            : "text-gray-500 hover:text-blue-600 transition"
        }`}
        >
        {y}
        </a>
    ))}
    </div>
<ProblemGrid year={pageYear} solutionStatuses={solutionStatuses} activeDay={pageDay} />
{ solutionStatuses.get(pageDay) !== "neither" && pageDay !== -1  && (
    <Code lang="python" code={code} />
)}
